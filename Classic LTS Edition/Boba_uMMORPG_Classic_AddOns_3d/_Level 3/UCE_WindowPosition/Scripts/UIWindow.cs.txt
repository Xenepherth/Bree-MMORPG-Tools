







using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;

enum CloseOption {
	DoNothing,
	DeactivateWindow,
	DestroyWindow
};

// ===================================================================================
// UIWindow
// ===================================================================================
public partial class UIWindow : MonoBehaviour, IBeginDragHandler, IDragHandler, IEndDragHandler {
	
	// close option
	[SerializeField] CloseOption onClose = CloseOption.DeactivateWindow;

	// cache
	Transform window;
	
	// -----------------------------------------------------------------------------------
	// Awake
	// -----------------------------------------------------------------------------------
	void Awake() {
		// cache the parent window
		window = transform.parent;
		string winName = transform.parent.gameObject.name;
		
		// get window position from playerprefs

		var x = PlayerPrefs.GetFloat(winName+"X", window.position.x);
		var y = PlayerPrefs.GetFloat(winName+"Y", window.position.y);
		var d = new Vector2(x, y);
		window.position = d;
		
		// add events
		var button = GetComponentInChildren<Button>(); // there is only one
		if (button != null) button.onClick.AddListener(OnClose);
	}
	
	// -----------------------------------------------------------------------------------
	// HandleDrag
	// -----------------------------------------------------------------------------------
	public void HandleDrag(PointerEventData d) {
		// send message in case the parent needs to know about it
		window.SendMessage("OnWindowDrag", d, SendMessageOptions.DontRequireReceiver);
		
		// move the parent
		window.Translate(d.delta);

	}
	
	// -----------------------------------------------------------------------------------
	// OnBeginDrag
	// -----------------------------------------------------------------------------------
	public void OnBeginDrag(PointerEventData d) {
		HandleDrag(d);
	}
	
	// -----------------------------------------------------------------------------------
	// OnDrag
	// -----------------------------------------------------------------------------------
	public void OnDrag(PointerEventData d) {
		HandleDrag(d);
	}
	
	// -----------------------------------------------------------------------------------
	// OnEndDrag
	// -----------------------------------------------------------------------------------
	public void OnEndDrag(PointerEventData d) {
		 HandleDrag(d);
		 
		// write window position to player prefs
		string winName = transform.parent.gameObject.name;

		PlayerPrefs.SetFloat(winName+"X", window.position.x);
		PlayerPrefs.SetFloat(winName+"Y", window.position.y);

	}
	
	// -----------------------------------------------------------------------------------
	// OnClose
	// -----------------------------------------------------------------------------------
	public void OnClose() {
		// send message in case it's needed
		// note: it's important to not name it the same as THIS function to avoid
		//       a deadlock
		window.SendMessage("OnWindowClose", SendMessageOptions.DontRequireReceiver);
		
		// hide window
		if (onClose == CloseOption.DeactivateWindow)
			window.gameObject.SetActive(false);
		
		// destroy if needed
		if (onClose == CloseOption.DestroyWindow)
			Destroy(window.gameObject);
	}
	

	// -----------------------------------------------------------------------------------

}


